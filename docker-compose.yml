version: '3.8'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3

  data_feed:
    build: .
    container_name: data_feed
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
    command: [ "python", "data_feed.py" ]
  strategy:
    build: .
    container_name: strategy
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
    command: [ "python", "strategy.py" ]
  trading_bot:
    build: .
    container_name: trading_bot
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_SECRET_KEY=${BINANCE_SECRET_KEY}
      - LOG_DIR=/app/logs
    volumes:
      - ./logs:/app/logs
    command: ["python", "execute.py"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  #prometheus:
  #  image: prom/prometheus
  #  volumes:
  #    - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #  ports:
  #    - "9090:9090"
#
  #grafana:
  #  image: grafana/grafana
  #  ports:
  #    - "3000:3000"
  #  environment:
  #    - GF_SECURITY_ADMIN_PASSWORD=admin
  #  depends_on:
  #    - prometheus
volumes:
  mongo_data:
  logs:
